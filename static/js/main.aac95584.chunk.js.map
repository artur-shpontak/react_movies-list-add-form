{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/MovieInput/MovieInput.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","MovieInput","name","value","onChange","htmlFor","type","placeholder","id","NewMovie","state","handleChange","event","target","setState","handleSubmit","preventDefault","props","onAdd","this","onSubmit","Component","App","moviesFromServer","addMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aac95584.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieInput.scss';\n\nexport const MovieInput = ({\n  title,\n  name,\n  value,\n  onChange,\n}) => (\n  <div className=\"MovieInput\">\n    <label htmlFor={name}>\n      {title}\n    </label>\n    <input\n      type=\"text\"\n      placeholder={`Enter ${name}`}\n      id={name}\n      name={name}\n      value={value}\n      onChange={onChange}\n    />\n  </div>\n);\n\nMovieInput.propTypes = {\n  title: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieInput } from '../MovieInput';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    this.props.onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <>\n        <h2 className=\"title\">Add new movie</h2>\n        <form onSubmit={this.handleSubmit}>\n          <MovieInput\n            title=\"Title\"\n            name=\"title\"\n            value={title}\n            onChange={this.handleChange}\n          />\n\n          <div className=\"MovieInput\">\n            <label htmlFor=\"description\">\n              Description\n            </label>\n            <textarea\n              type=\"text\"\n              placeholder=\"Enter description\"\n              id=\"description\"\n              name=\"description\"\n              value={description}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <MovieInput\n            title=\"Image url\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n          />\n\n          <MovieInput\n            title=\"IMDb url\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n          />\n\n          <MovieInput\n            title=\"IMDb id\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n          />\n\n          <button type=\"submit\">\n            Add movie\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}